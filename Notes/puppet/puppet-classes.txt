#Puppet classes are defined as a collection of resources, which are grouped together in order to get a target node or machine in a desired state. 

#These classes are defined inside Puppet manifest files which is located inside Puppet modules. 

#The main purpose of using a class is to reduce the same code repetition inside any manifest file or any other Puppet code.

Defining classes
================
Defining a class makes it available for later use. It doesn’t yet add any resources to the catalog; to do that, you must declare it (see below) or assign it from an ENC

                                         ========
========================================= Syntax ==================================================================================
                                         ========
# A class with no parameters
----------------------------
class base::linux {
  file { '/etc/passwd':
    owner => 'root',
    group => 'root',
    mode  => '0644',
  }
  file { '/etc/shadow':
    owner => 'root',
    group => 'root',
    mode  => '0440',
  }
}

# A class with parameters
--------------------------
class apache (String $version = 'latest') {
  package {'httpd':
    ensure => $version, # Using the class parameter from above
    before => File['/etc/httpd.conf'],
  }
  file {'/etc/httpd.conf':
    ensure  => file,
    owner   => 'httpd',
    content => template('apache/httpd.conf.erb'), # Template from a module
  }
  service {'httpd':
    ensure    => running,
    enable    => true,
    subscribe => File['/etc/httpd.conf'],
  }
}

======================================
Class parameters and variables
------------------------------
Parameters allow a class to request external data. If a class needs to configure itself with data other than facts, that data should usually enter the class via a parameter.
	

======================================
Class definitions should be stored in modules. Puppet is automatically aware of classes in modules and can autoload them by name.
Classes should be stored in their module’s manifests/ directory as one class per file, and each filename should reflect the name of its class